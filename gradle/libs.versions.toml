[versions]
# Kotlin
kotlin = "1.6.10"
coroutines = "1.6.0"

# Serialization
json = "1.3.2"
xmlUtil = "0.84.0"

# Compose
voyager = "1.0.0-beta16"
accompanist = "0.24.4"
kamel = "0.3.0"
materialDialogs = "0.6.6"

# Android
core = "1.7.0"
appCompat = "1.4.1"
activityCompose = "1.4.0"

# Android Lifecycle
lifecycle = "2.4.1"

# Swing
darklaf = "2.7.3"

# Dependency Injection
kotlinInject = "0.4.1"

# Network
ktor = "1.6.7"

# Logging
slf4j = "1.7.36"
slf4jAndroid = "1.7.36-0"
log4j = "2.17.2"
ktlogging = "2.1.21"

# Storage
okio = "3.0.0"
appDirs = "1.2.1"

# Preferences
multiplatformSettings = "0.8.1"

# Utility
kroki = "1.22"
desugarJdkLibs = "1.1.5"

# Localization
moko = "0.18.0"

[libraries]
# Kotlin
coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
coroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# Serialization
json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "json" }
xmlUtilCore = { module = "io.github.pdvrieze.xmlutil:core", version.ref = "xmlUtil" }
xmlUtilSerialization = { module = "io.github.pdvrieze.xmlutil:serialization", version.ref = "xmlUtil" }

# Compose
voyagerCore = { module = "cafe.adriel.voyager:voyager-core", version.ref = "voyager" }
voyagerNavigation = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyagerTransitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
accompanistPager = { module = "ca.gosyer:accompanist-pager", version.ref = "accompanist" }
accompanistFlowLayout = { module = "ca.gosyer:accompanist-flowlayout", version.ref = "accompanist" }
kamel = { module = "com.alialbaali.kamel:kamel-image", version.ref = "kamel" }
materialDialogsCore = { module = "ca.gosyer:compose-material-dialogs-core", version.ref = "materialDialogs" }

# Android
core = { module = "androidx.core:core-ktx", version.ref = "core" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }

# Android Lifecycle
lifecycleCommon = { module = "androidx.lifecycle:lifecycle-common", version.ref = "lifecycle" }
lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

# Swing
darklaf = { module = "com.github.weisj:darklaf-core", version.ref = "darklaf" }

# Dependency Injection
kotlinInjectRuntime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlinInject" }
kotlinInjectCompiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlinInject" }

# Network
ktorCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktorSerialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktorLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktorWebsockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktorAuth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

# Logging
slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4jJul = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
slf4jAndroid = { module = "uk.uuid.slf4j:slf4j-android", version.ref = "slf4jAndroid" }
log4jApi = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4jCore = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4jSlf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
ktlogging = { module = "io.github.microutils:kotlin-logging", version.ref = "ktlogging" }

# Storage
appDirs = { module = "net.harawata:appdirs", version.ref = "appDirs" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

# Preferences
multiplatformSettingsCore = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettingsSerialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatformSettings" }
multiplatformSettingsCoroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }

# Utility
krokiCoroutines = { module = "io.github.kerubistan.kroki:kroki-coroutines", version.ref = "kroki" }
desugarJdkLibs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugarJdkLibs" }

# Localization
mokoCore = { module = "dev.icerock.moko:resources", version.ref = "moko" }
mokoCompose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko" }