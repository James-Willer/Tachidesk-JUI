[versions]
# Kotlin
kotlin = "1.6.10"
coroutines = "1.6.1"

# Serialization
json = "1.3.2"
xmlUtil = "0.84.1"

# Compose
composeGradle = "1.1.1"
voyager = "1.0.0-beta16"
accompanist = "0.24.4"
kamel = "0.3.0"
materialDialogs = "0.7.0"

# Android
androidGradle = "7.0.4"
core = "1.7.0"
appCompat = "1.6.0-alpha01"
activityCompose = "1.4.0"
work = "2.7.1"

# Android Lifecycle
lifecycle = "2.5.0-alpha05"

# Swing
darklaf = "2.7.3"

# Dependency Injection
ksp = "1.6.10-1.0.4"
kotlinInject = "0.4.1"

# Network
ktor = "1.6.8"

# Logging
slf4j = "1.7.36"
slf4jAndroid = "1.7.36-0"
log4j = "2.17.2"
kmlogging = "1.1.2"

# Storage
okio = "3.0.0"
appDirs = "1.2.1"

# Preferences
multiplatformSettings = "0.8.1"

# Utility
kroki = "1.22"
desugarJdkLibs = "1.1.5"
aboutLibraries = "10.1.0"
dateTime = "0.3.2"

# Localization
locale = "0.11.0"
moko = "0.19.0"

# BuildConfigs
buildconfig = "3.0.3"
buildkonfig = "0.11.0"

# Linter
kotlinter = "3.9.0"

# Version updates
versions = "0.42.0"

# Optimizer
proguard = "7.2.1"

[libraries]
# Kotlin
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# Serialization
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "json" }
serialization-xmlUtil-core = { module = "io.github.pdvrieze.xmlutil:core", version.ref = "xmlUtil" }
serialization-xmlUtil-serialization = { module = "io.github.pdvrieze.xmlutil:serialization", version.ref = "xmlUtil" }

# Compose
voyager-core = { module = "cafe.adriel.voyager:voyager-core", version.ref = "voyager" }
voyager-navigation = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
accompanist-pager = { module = "ca.gosyer:accompanist-pager", version.ref = "accompanist" }
accompanist-pagerIndicators = { module = "ca.gosyer:accompanist-pager-indicators", version.ref = "accompanist" }
accompanist-flowLayout = { module = "ca.gosyer:accompanist-flowlayout", version.ref = "accompanist" }
kamel = { module = "com.alialbaali.kamel:kamel-image", version.ref = "kamel" }
materialDialogs-core = { module = "ca.gosyer:compose-material-dialogs-core", version.ref = "materialDialogs" }

# Android
androidx-core = { module = "androidx.core:core-ktx", version.ref = "core" }
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-work = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }

# Android Lifecycle
lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "lifecycle" }
lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

# Swing
darklaf = { module = "com.github.weisj:darklaf-core", version.ref = "darklaf" }

# Dependency Injection
kotlinInject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlinInject" }
kotlinInject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlinInject" }

# Network
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

# Logging
logging-slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logging-slf4j-jul = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
logging-slf4j-android = { module = "uk.uuid.slf4j:slf4j-android", version.ref = "slf4jAndroid" }
logging-log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
logging-log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
logging-log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
logging-kmlogging = { module = "org.lighthousegames:logging", version.ref = "kmlogging" }

# Storage
appDirs = { module = "net.harawata:appdirs", version.ref = "appDirs" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

# Preferences
multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatformSettings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }

# Utility
krokiCoroutines = { module = "io.github.kerubistan.kroki:kroki-coroutines", version.ref = "kroki" }
desugarJdkLibs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugarJdkLibs" }
aboutLibraries-core = { module = "com.mikepenz:aboutlibraries-core", version.ref = "aboutLibraries" }
aboutLibraries-ui = { module = "com.mikepenz:aboutlibraries-compose", version.ref = "aboutLibraries" }
dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "dateTime" }

# Localization
moko-core = { module = "dev.icerock.moko:resources", version.ref = "moko" }
moko-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko" }
locale = { module = "io.fluidsonic.locale:fluid-locale", version.ref = "locale" }

# Optimizer
proguard = { module = "com.guardsquare:proguard-gradle", version.ref = "proguard" }

[plugins]
# Kotlin
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin"}
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin"}
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}

# Android
android-library = { id = "com.android.library", version.ref = "androidGradle"}
android-application = { id = "com.android.application", version.ref = "androidGradle"}

# Compose
compose = { id = "org.jetbrains.compose", version.ref = "composeGradle"}

# Dependency Injection
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}

# Localization
moko-gradle = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko"}

# BuildConfigs
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig"}
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig"}

# Linter
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter"}

# Version updates
versions = { id = "com.github.ben-manes.versions", version.ref = "versions"}

# Utility
aboutLibraries = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutLibraries"}